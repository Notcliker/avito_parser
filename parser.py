"""
üîß –ù–∞–∑–≤–∞–Ω–∏–µ: Avito Parser 
üìÅ –§–∞–π–ª: parser.py
üë§ –ê–≤—Ç–æ—Ä: Metiso4kas
üìÖ –ò—é–Ω—å 2025
üíº –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü–∞—Ä—Å–∏–Ω–≥ Avito 
üõ° –õ–∏—Ü–µ–Ω–∑–∏—è: MIT

## üìú –û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏

- üõ†Ô∏è –î–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —É—á–µ–±–Ω—ã—Ö –∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π.
- üè¢ –û–Ω –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–æ–º Avito –∏ –Ω–µ —Å–≤—è–∑–∞–Ω —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Å–∞–π—Ç–∞ [Avito.ru](https://www.avito.ru).
- ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –º–æ–∂–µ—Ç –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç—å **—É—Å–ª–æ–≤–∏—è–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è Avito.
- üë§ –ê–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–µ—Å—ë—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ª—é–±—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
- ‚ùå –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ, –º–∞—Å—Å–æ–≤—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω—ã."
"""
import time
import os
import pandas as pd
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import undetected_chromedriver as uc
from fake_useragent import UserAgent
from config import PROXY, HEADLESS, SEARCH_PAGES

CITY_SLUG_MAP = {
    "moskva": "–ú–æ—Å–∫–≤–∞",
    "sankt-peterburg": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
    "novosibirsk": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
    "ekaterinburg": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
    "kazan": "–ö–∞–∑–∞–Ω—å",
    "rostov-na-donu": "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É",
    "nizhniy_novgorod": "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥",
    "chelyabinsk": "–ß–µ–ª—è–±–∏–Ω—Å–∫",
    "samara": "–°–∞–º–∞—Ä–∞",
    "ufa": "–£—Ñ–∞",
    "krasnoyarsk": "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫",
    "perm": "–ü–µ—Ä–º—å",
    "voronezh": "–í–æ—Ä–æ–Ω–µ–∂",
    "volgograd": "–í–æ–ª–≥–æ–≥—Ä–∞–¥",
    "omsk": "–û–º—Å–∫",
    "podolsk": "–ü–æ–¥–æ–ª—å—Å–∫",
    "rossiya": "–†–æ—Å—Å–∏—è"
}

def slug_to_city(slug):
    return CITY_SLUG_MAP.get(slug.lower(), slug.replace("-", " ").title())

def run_parser(query, city="rossiya"):
    options = uc.ChromeOptions()
    if HEADLESS:
        options.add_argument("--headless=new")
    options.add_argument(f"user-agent={UserAgent().random}")
    if PROXY:
        options.add_argument(f"--proxy-server=http://{PROXY}")
    options.add_argument("--disable-blink-features=AutomationControlled")

    driver = uc.Chrome(options=options)
    results = []

    base_url = "https://www.avito.ru/rossiya"
    query_url = f"{base_url}?q={query}"

    try:
        for page in range(1, SEARCH_PAGES + 1):
            url = f"{query_url}&p={page}"
            print(f"üåê –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {page}: {url}")
            driver.get(url)
            time.sleep(2)

            WebDriverWait(driver, 10).until(
                EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'div[data-marker="item"]'))
            )

            items = driver.find_elements(By.CSS_SELECTOR, 'div[data-marker="item"]')
            print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {len(items)}")

            for item in items:
                try:
                    title_el = item.find_element(By.CSS_SELECTOR, '[data-marker="item-title"]')
                    price_el = item.find_element(By.CSS_SELECTOR, '[data-marker="item-price"]')

                    try:
                        loc_el = item.find_element(By.CSS_SELECTOR, '[data-marker="item-address"]')
                        location = loc_el.text
                        city = location.split(',')[0].strip()
                    except:
                        location = "‚Äî"
                        city = "‚Äî"

                    try:
                        link_el = item.find_element(By.CSS_SELECTOR, 'a[data-marker="item-title"]')
                        link = link_el.get_attribute("href")
                        slug = link.split("/")[3]
                        city = slug_to_city(slug)
                    except:
                        link = "‚Äî"

                    results.append({
                        "–ù–∞–∑–≤–∞–Ω–∏–µ": title_el.text,
                        "–¶–µ–Ω–∞": price_el.text,
                        "–ì–æ—Ä–æ–¥": city,
                        "–°—Å—ã–ª–∫–∞": link
                    })

                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —ç–ª–µ–º–µ–Ω—Ç–∞: {e}")

            time.sleep(2)
    finally:
        driver.quit()
        del driver

    os.makedirs("data", exist_ok=True)
    df = pd.DataFrame(results)
    df.to_csv("data/results.csv", index=False, encoding="utf-8-sig")
    print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω! –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(df)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π.")
